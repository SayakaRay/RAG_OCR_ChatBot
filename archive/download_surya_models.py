# download_surya_models.py
import torch

DEVICE = "cpu"

def preload_all_surya_models():
    """
    ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÅ‡∏•‡∏∞ processor ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á Surya
    ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå Layout ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ OCR
    """
    print("Starting Surya models pre-loading...")
    print(f"Using device: {DEVICE}")

    try:
        # 1. ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Layout Detection
        print("\n[1/4] Downloading Layout Detection Model...")
        from surya.model.detection.segformer import load_model as load_layout_model
        layout_model = load_layout_model(device=DEVICE)
        print("‚úÖ Layout Detection Model downloaded.")

        # 2. ‡πÇ‡∏´‡∏•‡∏î Processor ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Layout Detection
        print("\n[2/4] Downloading Layout Detection Processor...")
        from surya.model.detection.segformer import load_processor as load_layout_processor
        layout_processor = load_layout_processor()
        print("‚úÖ Layout Detection Processor downloaded.")

        # 3. ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Text Recognition (OCR)
        print("\n[3/4] Downloading OCR Model...")
        from surya.model.recognition.model import load_model as load_ocr_model
        ocr_model = load_ocr_model(device=DEVICE)
        print("‚úÖ OCR Model downloaded.")

        # 4. ‡πÇ‡∏´‡∏•‡∏î Processor ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Text Recognition (OCR)
        print("\n[4/4] Downloading OCR Processor...")
        from surya.model.recognition.processor import load_processor as load_ocr_processor
        ocr_processor = load_ocr_processor()
        print("‚úÖ OCR Processor downloaded.")
        
        print("\nüéâ All Surya models have been successfully downloaded and cached locally.")

    except Exception as e:
        print(f"\n‚ùå An error occurred during download: {e}")

if __name__ == "__main__":
    preload_all_surya_models()